# -*- coding: utf-8 -*-
"""Decision Tree classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1160-Eb0E5LObeZW4Mv8tyWmKrJFaE2Wm
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

from sklearn.datasets import load_iris

iris=load_iris()

iris

print(iris['DESCR'])

print(iris['target'])



# Assuming 'iris' is a dictionary-like object containing the dataset
X = iris['data']  # Extract the feature data, which should be a 2D array
y = iris['target']

# train test spit
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=10)

# dependent feature

y=iris['target']

# train test spit
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=10)

from sklearn.tree import DecisionTreeClassifier
treeClassifier=DecisionTreeClassifier(max_depth=2)

treeClassifier.fit(X_train,y_train)

# visualised

from sklearn import tree
plt.figure(figsize=(15,10))
tree.plot_tree(treeClassifier,filled=True)

y_pred=treeClassifier.predict(X_test)

from sklearn.metrics import confusion_matrix,classification_report

cm=confusion_matrix(y_test,y_pred)
print(cm)
print(classification_report(y_test,y_pred))